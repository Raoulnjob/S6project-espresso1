NAME: frontend
LAST DEPLOYED: Sun Jan 28 09:33:45 2024
NAMESPACE: s6raoul
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: s6raoul-espresso-shop-web3/templates/pdbv1.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: espresso-shop-review-v1
spec:
  minAvailable: 
  selector:
    matchLabels:
       app: espresso-shop-review
---
# Source: s6raoul-espresso-shop-web3/templates/pdbv2.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: espresso-shop-review-v2
spec:
  minAvailable: 
  selector:
    matchLabels:
       app: espresso-shop-review
---
# Source: s6raoul-espresso-shop-web3/templates/serviceaccountv1.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-s6raoul-espresso-shop-web3-v1
  labels:
    app: espresso-shop-review
---
# Source: s6raoul-espresso-shop-web3/templates/serviceaccountv2.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-s6raoul-espresso-shop-web3-v2
  labels:
    app: espresso-shop-review
---
# Source: s6raoul-espresso-shop-web3/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: espresso-shop-review
  labels:
    app: espresso-shop-review
spec:
  type: ClusterIP
  ports:
    - port: 8092
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: espresso-shop-review
---
# Source: s6raoul-espresso-shop-web3/templates/deploymentv1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: espresso-shop-review-v1
  labels:
     app: espresso-shop-review
spec:
  replicas: 2
  selector:
    matchLabels:
      app: espresso-shop-review
      version: v1
  template:
    metadata:
      labels:
        app: espresso-shop-review
        version: v1

    spec:
      serviceAccountName: frontend-s6raoul-espresso-shop-web3
      securityContext:
        {}
      containers:
        - name: s6raoul-espresso-shop-web3
          securityContext:
            {}
          image: "raoulnjobi/s6raoul:espressoreviews"
          env:
            - name: SERVICE_VERSION
              value: v1
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
---
# Source: s6raoul-espresso-shop-web3/templates/deploymentv2.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: espresso-shop-review-v2
  labels:
     app: espresso-shop-review
spec:
  replicas: 2
  selector:
    matchLabels:
      app: espresso-shop-review
      version: v1
  template:
    metadata:
      labels:
        app: espresso-shop-review
        version: v2

    spec:
      serviceAccountName: frontend-s6raoul-espresso-shop-web3
      securityContext:
        {}
      containers:
        - name: s6raoul-espresso-shop-web3
          securityContext:
            {}
          image: "raoulnjobi/s6raoul:espressoreviews"
          env:
            - name: SERVICE_VERSION
              value: v2
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m

NOTES:
1. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace s6raoul -l "app.kubernetes.io/name=s6raoul-espresso-shop-web3,app.kubernetes.io/instance=frontend" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace s6raoul $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace s6raoul port-forward $POD_NAME 8080:$CONTAINER_PORT
